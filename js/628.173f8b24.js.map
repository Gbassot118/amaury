{"version":3,"file":"js/628.173f8b24.js","mappings":"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","sources":["webpack://jeux-educatifs/./src/views/Game8.vue","webpack://jeux-educatifs/./src/views/Game8.vue?dc19"],"sourcesContent":["<template>\n  <div class=\"game-container\">\n    <h1>Le Jardin des Animaux</h1>\n\n    <div class=\"instructions\">\n      <p>Fais glisser exactement {{ currentNumber }} animaux dans le jardin pour gagner</p>\n    </div>\n\n    <div class=\"game-area\">\n      <!-- Target number display -->\n      <div class=\"target-number-container\">\n        <div class=\"target-number\">{{ currentNumber }}</div>\n        <div class=\"counter\">{{ placedAnimalsCount }}/{{ currentNumber }}</div>\n      </div>\n\n      <!-- Garden area (drop zone) -->\n      <div \n        class=\"garden-container\"\n        @dragover.prevent\n        @drop=\"dropAnimal($event)\"\n      >\n        <h3 class=\"container-title\">Le Jardin</h3>\n        <div class=\"garden\">\n          <div class=\"garden-decoration\">\n            <div class=\"garden-icon\">üå≥</div>\n            <div class=\"garden-icon\">üå∑</div>\n            <div class=\"garden-icon\">üåø</div>\n            <div class=\"garden-icon\">üå±</div>\n          </div>\n          <div \n            v-for=\"animal in placedAnimals\" \n            :key=\"animal.id\" \n            class=\"animal-in-garden\"\n            :style=\"{ \n              position: 'absolute', \n              left: animal.position.x + 'px', \n              top: animal.position.y + 'px' \n            }\"\n          >\n            {{ animal.icon }}\n          </div>\n        </div>\n      </div>\n\n      <!-- Animals enclosure (source) -->\n      <div class=\"container-wrapper enclosure-wrapper\">\n        <h3 class=\"container-title\">Enclos des Animaux</h3>\n        <div class=\"animals-container\">\n          <div \n            v-for=\"(animal, index) in animals\" \n            :key=\"index\"\n            class=\"animal\"\n            :class=\"{ 'placed': animal.placed }\"\n            draggable=\"true\"\n            @dragstart=\"dragStart($event, animal)\"\n            v-show=\"!animal.placed\"\n            :style=\"{ \n              position: 'absolute', \n              left: animal.enclosurePosition.x + 'px', \n              top: animal.enclosurePosition.y + 'px',\n              transition: 'left 2s, top 2s'\n            }\"\n          >\n            {{ animal.icon }}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div v-if=\"showFeedback\" class=\"feedback-message\" :class=\"{ 'success': feedbackSuccess }\">\n      <p>{{ feedbackMessage }}</p>\n    </div>\n\n    <div v-if=\"gameCompleted\" class=\"victory-message\">\n      <h2>Bravo !</h2>\n      <p>Tu as r√©ussi √† placer exactement {{ currentNumber }} animaux dans le jardin !</p>\n      <button @click=\"resetGame\" class=\"reset-button\">Rejouer</button>\n      <router-link to=\"/\" class=\"home-button\">Menu Principal</router-link>\n    </div>\n\n    <Fireworks v-if=\"gameCompleted\" ref=\"fireworks\" class=\"fireworks-container\" />\n  </div>\n</template>\n\n<script>\nimport { Fireworks } from '@fireworks-js/vue'\n\nexport default {\n  name: 'AnimalGardenGame',\n  components: {\n    Fireworks\n  },\n  data() {\n    return {\n      totalAnimals: 15, // More than 10 to avoid cheating\n      animals: [],\n      placedAnimals: [],\n      currentDraggedAnimal: null,\n      currentNumber: 1, // Start with 1\n      maxNumber: 10, // Count up to 10\n      placedAnimalsCount: 0,\n      gameCompleted: false,\n      fireworksTimer: null,\n      animationTimer: null,\n      showFeedback: false,\n      feedbackMessage: '',\n      feedbackSuccess: false,\n      feedbackTimer: null,\n      animalIcons: [\n        'üê∞', 'üê∏', 'üê¶', 'üê¢', 'ü¶ä', 'üêøÔ∏è', 'ü¶î', 'üêù', 'ü¶ã', 'üêå'\n      ]\n    }\n  },\n  created() {\n    this.initializeGame();\n  },\n  mounted() {\n    // Add document-level dragend event to handle drops outside garden\n    document.addEventListener('dragend', this.handleDragEnd);\n\n    // Start the animation of animals in the enclosure\n    this.startAnimalsAnimation();\n  },\n  beforeUnmount() {\n    // Clean up event listeners and timers\n    document.removeEventListener('dragend', this.handleDragEnd);\n    this.stopAnimalsAnimation();\n\n    if (this.fireworksTimer) {\n      clearTimeout(this.fireworksTimer);\n    }\n\n    if (this.feedbackTimer) {\n      clearTimeout(this.feedbackTimer);\n    }\n  },\n  methods: {\n    initializeGame() {\n      // Create animals\n      this.animals = Array.from({ length: this.totalAnimals }, (_, i) => {\n        const randomIconIndex = Math.floor(Math.random() * this.animalIcons.length);\n        // Generate random positions within the enclosure\n        const randomX = Math.floor(Math.random() * 200);\n        const randomY = Math.floor(Math.random() * 200);\n        return {\n          id: i,\n          placed: false,\n          icon: this.animalIcons[randomIconIndex],\n          position: { x: 0, y: 0 },\n          enclosurePosition: { x: randomX, y: randomY }\n        };\n      });\n\n      this.placedAnimals = [];\n      // Choose a random number between 1 and 10\n      this.currentNumber = Math.floor(Math.random() * 10) + 1;\n      this.placedAnimalsCount = 0;\n      this.gameCompleted = false;\n      this.showFeedback = false;\n    },\n\n    dragStart(event, animal) {\n      this.currentDraggedAnimal = animal;\n      event.dataTransfer.setData('text/plain', animal.id);\n    },\n\n    dropAnimal(event) {\n      event.preventDefault();\n\n      if (!this.currentDraggedAnimal || this.currentDraggedAnimal.placed) {\n        return;\n      }\n\n      // Calculate position relative to the garden\n      const gardenRect = event.currentTarget.getBoundingClientRect();\n      // Adjust position to center the animal on the cursor\n      // The animals are 30px in size (font-size: 30px)\n      const animalSize = 30;\n      const x = event.clientX - gardenRect.left - (animalSize / 2);\n      const y = event.clientY - gardenRect.top - (animalSize / 2);\n\n      // Place the animal in the garden with position\n      this.currentDraggedAnimal.placed = true;\n      this.currentDraggedAnimal.position = { x, y };\n      this.placedAnimals.push({ ...this.currentDraggedAnimal });\n      this.placedAnimalsCount++;\n\n      // Check if the correct number of animals has been placed\n      if (this.placedAnimalsCount === this.currentNumber) {\n        // Success! Show positive feedback\n        this.showSuccessFeedback();\n\n        // End the game after a delay\n        setTimeout(() => {\n          this.gameCompleted = true;\n          this.$nextTick(() => {\n            this.startFireworks();\n          });\n        }, 2000);\n      } else if (this.placedAnimalsCount > this.currentNumber) {\n        // Too many animals! Show error feedback\n        this.showErrorFeedback();\n\n        // Return the last animal to the enclosure\n        this.returnLastAnimal();\n      }\n    },\n\n    handleDragEnd() {\n      this.currentDraggedAnimal = null;\n    },\n\n    returnLastAnimal() {\n      if (this.placedAnimals.length > 0) {\n        const lastAnimal = this.placedAnimals.pop();\n        const animalIndex = this.animals.findIndex(a => a.id === lastAnimal.id);\n\n        if (animalIndex !== -1) {\n          this.animals[animalIndex].placed = false;\n          this.placedAnimalsCount--;\n        }\n      }\n    },\n\n    showSuccessFeedback() {\n      this.feedbackSuccess = true;\n      this.feedbackMessage = 'Bravo ! C\\'est le bon nombre d\\'animaux !';\n      this.showFeedback = true;\n\n      // Clear any existing feedback timer\n      if (this.feedbackTimer) {\n        clearTimeout(this.feedbackTimer);\n      }\n\n      // Hide feedback after 2 seconds\n      this.feedbackTimer = setTimeout(() => {\n        this.showFeedback = false;\n      }, 2000);\n    },\n\n    showErrorFeedback() {\n      this.feedbackSuccess = false;\n      this.feedbackMessage = 'Tu en as mis un de trop ! Essayons encore.';\n      this.showFeedback = true;\n\n      // Clear any existing feedback timer\n      if (this.feedbackTimer) {\n        clearTimeout(this.feedbackTimer);\n      }\n\n      // Hide feedback after 2 seconds\n      this.feedbackTimer = setTimeout(() => {\n        this.showFeedback = false;\n      }, 2000);\n    },\n\n    // Method removed as we no longer need to progress through numbers sequentially\n\n    startAnimalsAnimation() {\n      // Animate animals in the enclosure\n      this.animationTimer = setInterval(() => {\n        this.animals.forEach(animal => {\n          if (!animal.placed) {\n            // Generate new random positions within the enclosure\n            animal.enclosurePosition = {\n              x: Math.floor(Math.random() * 200),\n              y: Math.floor(Math.random() * 200)\n            };\n          }\n        });\n      }, 3000);\n    },\n\n    stopAnimalsAnimation() {\n      if (this.animationTimer) {\n        clearInterval(this.animationTimer);\n        this.animationTimer = null;\n      }\n    },\n\n    startFireworks() {\n      if (this.$refs.fireworks) {\n        const fireworks = this.$refs.fireworks;\n        fireworks.updateOptions({\n          autoresize: true,\n          opacity: 0.5,\n          acceleration: 1.05,\n          friction: 0.97,\n          gravity: 1.5,\n          particles: 50,\n          traceLength: 3,\n          traceSpeed: 10,\n          explosion: 5,\n          intensity: 30,\n          flickering: 50,\n          lineStyle: 'round',\n          hue: {\n            min: 0,\n            max: 360\n          },\n          delay: {\n            min: 30,\n            max: 60\n          },\n          rocketsPoint: {\n            min: 50,\n            max: 50\n          },\n          lineWidth: {\n            explosion: {\n              min: 1,\n              max: 3\n            },\n            trace: {\n              min: 1,\n              max: 2\n            }\n          },\n          brightness: {\n            min: 50,\n            max: 80\n          },\n          decay: {\n            min: 0.015,\n            max: 0.03\n          },\n          mouse: {\n            click: false,\n            move: false,\n            max: 1\n          }\n        });\n        fireworks.start();\n\n        // Stop fireworks after 10 seconds\n        this.fireworksTimer = setTimeout(() => {\n          if (this.$refs.fireworks) {\n            this.$refs.fireworks.stop();\n          }\n        }, 10000);\n      }\n    },\n\n    resetGame() {\n      if (this.$refs.fireworks) {\n        this.$refs.fireworks.stop();\n      }\n\n      // Clear the fireworks timer if it exists\n      if (this.fireworksTimer) {\n        clearTimeout(this.fireworksTimer);\n        this.fireworksTimer = null;\n      }\n\n      this.initializeGame();\n    }\n  }\n}\n</script>\n\n<style scoped>\n.game-container {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\nh1 {\n  color: #42b983;\n  margin-bottom: 30px;\n}\n\n.instructions {\n  margin-bottom: 40px;\n  font-size: 20px;\n}\n\n.game-area {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 30px;\n}\n\n.target-number-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.target-number {\n  font-size: 80px;\n  font-weight: bold;\n  color: #42b983;\n  background-color: #f5f5f5;\n  border: 3px solid #42b983;\n  border-radius: 50%;\n  width: 120px;\n  height: 120px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 10px;\n}\n\n.counter {\n  font-size: 24px;\n  font-weight: bold;\n  color: #42b983;\n}\n\n.garden-container {\n  width: 100%;\n  margin-bottom: 30px;\n}\n\n.garden {\n  height: 300px;\n  border: 3px solid #42b983;\n  border-radius: 10px;\n  background-color: #d7f7e8;\n  position: relative;\n  overflow: hidden;\n}\n\n.garden-decoration {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: center;\n  opacity: 0.3;\n  pointer-events: none;\n}\n\n.garden-icon {\n  font-size: 40px;\n  margin: 10px;\n}\n\n.container-wrapper {\n  width: 100%;\n}\n\n.enclosure-wrapper {\n  margin-bottom: 30px;\n}\n\n.animals-container {\n  height: 200px;\n  border: 3px solid #42b983;\n  border-radius: 10px;\n  background-color: #f5f5f5;\n  position: relative;\n  overflow: hidden;\n}\n\n.animal {\n  font-size: 30px;\n  cursor: grab;\n  user-select: none;\n  z-index: 10;\n}\n\n.animal-in-garden {\n  font-size: 30px;\n  position: absolute;\n  z-index: 5;\n}\n\n.container-title {\n  margin-bottom: 10px;\n  color: #42b983;\n}\n\n.feedback-message {\n  padding: 15px;\n  border-radius: 10px;\n  margin: 20px 0;\n  text-align: center;\n  font-size: 20px;\n  animation: fadeIn 0.5s;\n}\n\n.feedback-message.success {\n  background-color: #d7f7e8;\n  color: #42b983;\n}\n\n.feedback-message:not(.success) {\n  background-color: #ffe6e6;\n  color: #ff6b6b;\n}\n\n.victory-message {\n  margin-top: 40px;\n  padding: 20px;\n  background-color: #d7f7e8;\n  border-radius: 10px;\n  animation: fadeIn 1s;\n  text-align: center;\n}\n\n.victory-message h2 {\n  color: #42b983;\n  font-size: 36px;\n  margin-bottom: 10px;\n}\n\n.reset-button, .home-button {\n  background-color: #42b983;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 16px;\n  margin: 10px;\n  display: inline-block;\n  text-decoration: none;\n}\n\n.reset-button:hover, .home-button:hover {\n  background-color: #3aa876;\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; }\n  to { opacity: 1; }\n}\n\n.fireworks-container {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 10;\n  pointer-events: none;\n}\n</style>\n","import { render } from \"./Game8.vue?vue&type=template&id=71be6e9e&scoped=true\"\nimport script from \"./Game8.vue?vue&type=script&lang=js\"\nexport * from \"./Game8.vue?vue&type=script&lang=js\"\n\nimport \"./Game8.vue?vue&type=style&index=0&id=71be6e9e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-71be6e9e\"]])\n\nexport default __exports__"],"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","$data","currentNumber","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","placedAnimalsCount","onDragover","_cache","_withModifiers","onDrop","$event","$options","dropAnimal","_hoisted_7","_Fragment","_renderList","placedAnimals","animal","key","id","style","_normalizeStyle","position","x","y","icon","_hoisted_8","_hoisted_9","animals","index","_normalizeClass","placed","draggable","onDragstart","dragStart","enclosurePosition","_hoisted_10","showFeedback","feedbackSuccess","feedbackMessage","gameCompleted","_hoisted_11","onClick","resetGame","apply","arguments","_createVNode","_component_router_link","to","_createBlock","_component_Fireworks","ref","name","components","Fireworks","data","totalAnimals","currentDraggedAnimal","maxNumber","fireworksTimer","animationTimer","feedbackTimer","animalIcons","created","this","initializeGame","mounted","document","addEventListener","handleDragEnd","startAnimalsAnimation","beforeUnmount","removeEventListener","stopAnimalsAnimation","clearTimeout","methods","_this","Array","from","length","_","i","randomIconIndex","Math","floor","random","randomX","randomY","event","dataTransfer","setData","_this2","preventDefault","gardenRect","currentTarget","getBoundingClientRect","animalSize","clientX","left","clientY","top","push","_objectSpread","showSuccessFeedback","setTimeout","$nextTick","startFireworks","showErrorFeedback","returnLastAnimal","lastAnimal","pop","animalIndex","findIndex","a","_this3","_this4","_this5","setInterval","forEach","clearInterval","_this6","$refs","fireworks","updateOptions","autoresize","opacity","acceleration","friction","gravity","particles","traceLength","traceSpeed","explosion","intensity","flickering","lineStyle","hue","min","max","delay","rocketsPoint","lineWidth","trace","brightness","decay","mouse","click","move","start","stop","__exports__","render"],"sourceRoot":""}