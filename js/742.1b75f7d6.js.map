{"version":3,"file":"js/742.1b75f7d6.js","mappings":"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","sources":["webpack://jeux-educatifs/./src/views/Game7.vue","webpack://jeux-educatifs/./src/views/Game7.vue?f52f"],"sourcesContent":["<template>\n  <div class=\"game-container\">\n    <h1>Jeu de Memory</h1>\n\n    <div class=\"instructions\">\n      <p>Retourne les cartes pour trouver les paires de chiffres identiques</p>\n    </div>\n\n    <div class=\"memory-board\">\n      <div \n        v-for=\"(card, index) in cards\" \n        :key=\"index\"\n        class=\"memory-card\"\n        :class=\"{\n          'flipped': card.flipped,\n          'matched': card.matched\n        }\"\n        @click=\"flipCard(index)\"\n      >\n        <div class=\"card-inner\">\n          <div class=\"card-front\">\n            <span>?</span>\n          </div>\n          <div class=\"card-back\">\n            <span>{{ card.value }}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div v-if=\"gameCompleted\" class=\"victory-message\">\n      <h2>Bravo !</h2>\n      <p>Tu as trouv√© toutes les paires !</p>\n      <button @click=\"resetGame\" class=\"reset-button\">Rejouer</button>\n      <router-link to=\"/\" class=\"home-button\">Menu Principal</router-link>\n    </div>\n\n    <Fireworks v-if=\"gameCompleted\" ref=\"fireworks\" class=\"fireworks-container\" />\n  </div>\n</template>\n\n<script>\nimport { Fireworks } from '@fireworks-js/vue'\n\nexport default {\n  name: 'MemoryGame',\n  components: {\n    Fireworks\n  },\n  data() {\n    return {\n      cards: [],\n      flippedCards: [],\n      matchedPairs: 0,\n      totalPairs: 4,\n      gameCompleted: false,\n      fireworksTimer: null,\n      canFlip: true\n    }\n  },\n  mounted() {\n    this.initializeGame();\n  },\n  beforeUnmount() {\n    if (this.fireworksTimer) {\n      clearTimeout(this.fireworksTimer);\n    }\n  },\n  methods: {\n    initializeGame() {\n      // Generate 4 random pairs of digits (0-9)\n      const digits = [];\n      while (digits.length < this.totalPairs) {\n        const randomDigit = Math.floor(Math.random() * 10); // 0-9\n        if (!digits.includes(randomDigit)) {\n          digits.push(randomDigit);\n        }\n      }\n      \n      // Create pairs of cards\n      const cardPairs = [...digits, ...digits];\n      \n      // Shuffle the cards\n      this.cards = this.shuffleArray(cardPairs).map(value => ({\n        value,\n        flipped: false,\n        matched: false\n      }));\n      \n      this.flippedCards = [];\n      this.matchedPairs = 0;\n      this.gameCompleted = false;\n      this.canFlip = true;\n    },\n    \n    shuffleArray(array) {\n      const newArray = [...array];\n      for (let i = newArray.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [newArray[i], newArray[j]] = [newArray[j], newArray[i]];\n      }\n      return newArray;\n    },\n    \n    flipCard(index) {\n      // Prevent flipping if game is completed or card is already flipped/matched\n      if (\n        !this.canFlip || \n        this.gameCompleted || \n        this.cards[index].flipped || \n        this.cards[index].matched ||\n        this.flippedCards.length >= 2\n      ) {\n        return;\n      }\n      \n      // Flip the card\n      this.cards[index].flipped = true;\n      this.flippedCards.push(index);\n      \n      // Check if two cards are flipped\n      if (this.flippedCards.length === 2) {\n        this.canFlip = false;\n        setTimeout(() => {\n          this.checkMatch();\n        }, 1000);\n      }\n    },\n    \n    checkMatch() {\n      const [firstIndex, secondIndex] = this.flippedCards;\n      const firstCard = this.cards[firstIndex];\n      const secondCard = this.cards[secondIndex];\n      \n      if (firstCard.value === secondCard.value) {\n        // Match found\n        firstCard.matched = true;\n        secondCard.matched = true;\n        this.matchedPairs++;\n        \n        // Check if all pairs are found\n        if (this.matchedPairs === this.totalPairs) {\n          this.gameCompleted = true;\n          this.$nextTick(() => {\n            this.startFireworks();\n          });\n        }\n      } else {\n        // No match, flip cards back\n        firstCard.flipped = false;\n        secondCard.flipped = false;\n      }\n      \n      // Reset flipped cards\n      this.flippedCards = [];\n      this.canFlip = true;\n    },\n    \n    startFireworks() {\n      if (this.$refs.fireworks) {\n        const fireworks = this.$refs.fireworks;\n        fireworks.updateOptions({\n          autoresize: true,\n          opacity: 0.5,\n          acceleration: 1.05,\n          friction: 0.97,\n          gravity: 1.5,\n          particles: 50,\n          traceLength: 3,\n          traceSpeed: 10,\n          explosion: 5,\n          intensity: 30,\n          flickering: 50,\n          lineStyle: 'round',\n          hue: {\n            min: 0,\n            max: 360\n          },\n          delay: {\n            min: 30,\n            max: 60\n          },\n          rocketsPoint: {\n            min: 50,\n            max: 50\n          },\n          lineWidth: {\n            explosion: {\n              min: 1,\n              max: 3\n            },\n            trace: {\n              min: 1,\n              max: 2\n            }\n          },\n          brightness: {\n            min: 50,\n            max: 80\n          },\n          decay: {\n            min: 0.015,\n            max: 0.03\n          },\n          mouse: {\n            click: false,\n            move: false,\n            max: 1\n          }\n        });\n        fireworks.start();\n\n        // Stop fireworks after 10 seconds\n        this.fireworksTimer = setTimeout(() => {\n          if (this.$refs.fireworks) {\n            this.$refs.fireworks.stop();\n          }\n        }, 10000);\n      }\n    },\n    \n    resetGame() {\n      if (this.$refs.fireworks) {\n        this.$refs.fireworks.stop();\n      }\n\n      // Clear the fireworks timer if it exists\n      if (this.fireworksTimer) {\n        clearTimeout(this.fireworksTimer);\n        this.fireworksTimer = null;\n      }\n\n      this.initializeGame();\n    }\n  }\n}\n</script>\n\n<style scoped>\n.game-container {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\nh1 {\n  color: #42b983;\n  margin-bottom: 30px;\n}\n\n.instructions {\n  margin-bottom: 40px;\n  font-size: 20px;\n}\n\n.memory-board {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-gap: 15px;\n  margin-bottom: 50px;\n  perspective: 1000px;\n}\n\n.memory-card {\n  height: 120px;\n  cursor: pointer;\n  position: relative;\n  transform-style: preserve-3d;\n  transition: transform 0.5s;\n}\n\n.memory-card.flipped {\n  transform: rotateY(180deg);\n}\n\n.card-inner {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  transform-style: preserve-3d;\n}\n\n.card-front, .card-back {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  backface-visibility: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 10px;\n  font-size: 40px;\n  font-weight: bold;\n}\n\n.card-front {\n  background-color: #42b983;\n  color: white;\n}\n\n.card-back {\n  background-color: white;\n  border: 3px solid #42b983;\n  color: #42b983;\n  transform: rotateY(180deg);\n}\n\n.memory-card.matched .card-back {\n  background-color: #d7f7e8;\n}\n\n.victory-message {\n  margin-top: 40px;\n  padding: 20px;\n  background-color: #d7f7e8;\n  border-radius: 10px;\n  animation: fadeIn 1s;\n}\n\n.victory-message h2 {\n  color: #42b983;\n  font-size: 36px;\n  margin-bottom: 10px;\n}\n\n.reset-button, .home-button {\n  background-color: #42b983;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 16px;\n  margin: 10px;\n  display: inline-block;\n  text-decoration: none;\n}\n\n.reset-button:hover, .home-button:hover {\n  background-color: #3aa876;\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; }\n  to { opacity: 1; }\n}\n\n.fireworks-container {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 10;\n  pointer-events: none;\n}\n</style>","import { render } from \"./Game7.vue?vue&type=template&id=89f63060&scoped=true\"\nimport script from \"./Game7.vue?vue&type=script&lang=js\"\nexport * from \"./Game7.vue?vue&type=script&lang=js\"\n\nimport \"./Game7.vue?vue&type=style&index=0&id=89f63060&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-89f63060\"]])\n\nexport default __exports__"],"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_renderList","$data","cards","card","index","key","_normalizeClass","flipped","matched","onClick","$event","$options","flipCard","_hoisted_4","_hoisted_5","_toDisplayString","value","gameCompleted","_hoisted_6","_cache","resetGame","apply","arguments","_createVNode","_component_router_link","to","_createBlock","_component_Fireworks","ref","name","components","Fireworks","data","flippedCards","matchedPairs","totalPairs","fireworksTimer","canFlip","mounted","this","initializeGame","beforeUnmount","clearTimeout","methods","digits","length","randomDigit","Math","floor","random","includes","push","cardPairs","concat","shuffleArray","map","array","newArray","_toConsumableArray","i","j","_ref","_this","setTimeout","checkMatch","_this2","_this$flippedCards","_slicedToArray","firstIndex","secondIndex","firstCard","secondCard","$nextTick","startFireworks","_this3","$refs","fireworks","updateOptions","autoresize","opacity","acceleration","friction","gravity","particles","traceLength","traceSpeed","explosion","intensity","flickering","lineStyle","hue","min","max","delay","rocketsPoint","lineWidth","trace","brightness","decay","mouse","click","move","start","stop","__exports__","render"],"sourceRoot":""}